// <auto-generated />
using System;
using Lucca.ExpenseApp.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Lucca.ExpenseApp.Infrastructure.Migrations
{
    [DbContext(typeof(ExpenseAppDbContext))]
    partial class ExpenseAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Lucca.ExpenseApp.Domain.Entities.Claimant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Claimants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "USD",
                            FirstName = "Anthony",
                            LastName = "Stark"
                        },
                        new
                        {
                            Id = 2,
                            Currency = "RUB",
                            FirstName = "Natasha",
                            LastName = "Romanova"
                        });
                });

            modelBuilder.Entity("Lucca.ExpenseApp.Domain.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("ClaimantId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClaimantId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Lucca.ExpenseApp.Domain.Entities.Expense", b =>
                {
                    b.HasOne("Lucca.ExpenseApp.Domain.Entities.Claimant", "Claimant")
                        .WithMany("Expenses")
                        .HasForeignKey("ClaimantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claimant");
                });

            modelBuilder.Entity("Lucca.ExpenseApp.Domain.Entities.Claimant", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
